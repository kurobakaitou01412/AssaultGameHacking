/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Queue;
import java.util.ResourceBundle;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author kuroba kaitou
 */
public class DictionaryGUI extends javax.swing.JFrame {
    
    /**
     * Creates new form DictionaryGUI
     */
    private File fileName;
    BinaryTree EN_Tree = new BinaryTree();
    BinaryTree VN_Tree = new BinaryTree();
    ResourceBundle resource;
    String language = "vn";
    String country = "VN";

    public DictionaryGUI() {
        initComponents();
        loadData("EN_dictionary.txt", this.EN_Tree);
        loadData("VN_dictionary.txt", this.VN_Tree);
        setUpUI(language, country);
    }

    private void loadData(String langue, BinaryTree tree) {
        tree.root = null;
        fileName = new File(langue);
        try {
            FileReader fr = new FileReader(fileName);
            BufferedReader br = new BufferedReader(fr);
//            tree = new BinaryTree();
            String line = "";
            while ((line = br.readLine()) != null) {
                if (line.contains("\uFEFF")) {
                    line = line.substring(1);
                }
                String vn;
                LinkedList<String> en = new LinkedList<>();
                StringTokenizer stk = new StringTokenizer(line, ":");
                vn = stk.nextToken().trim();
                String temp = stk.nextToken().trim();
                StringTokenizer stkk = new StringTokenizer(temp, ",");
                while (stkk.hasMoreElements()) {
                    en.add(stkk.nextToken());
                }
                tree.insert(vn, en);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void setUpUI(String language, String country) {
        this.txtMeanings.setEditable(false);
        Locale currentLocale;
        currentLocale = new Locale(language, country);
        String base = "internationalization.ResourceFiles/Resources";
        resource = ResourceBundle.getBundle(base, currentLocale);
        btnSearch.setText(resource.getString("btnSearch"));
        lbTitle.setText(resource.getString("lbTtile"));
        btnAdd.setText(resource.getString("btnAdd"));
        btnSave.setText(resource.getString("btnSave"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMeanings = new javax.swing.JTextArea();
        lbTitle = new javax.swing.JLabel();
        cbxLanguage = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        txtWord = new javax.swing.JTextField();
        txtMeaning = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtMeanings.setColumns(20);
        txtMeanings.setRows(5);
        jScrollPane1.setViewportView(txtMeanings);

        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Dictionary program");
        lbTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cbxLanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "vi-EN", "en-VI" }));
        cbxLanguage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxLanguageActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(cbxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)
                            .addComponent(txtSearch))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(txtWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String search = txtSearch.getText();
        if (search.isEmpty()) {
            txtSearch.requestFocus();
            JOptionPane.showMessageDialog(this, resource.getString("msgError"), resource.getString("msgErrorTitle"), JOptionPane.OK_OPTION);
            return;
        }
        this.txtMeanings.setText("");
        LinkedList<String> value = new LinkedList<>();
        if (cbxLanguage.getSelectedIndex() == 1) {
            value = VN_Tree.Search(search);
        } else {
            value = EN_Tree.Search(search);
        }
        if (value == null) {
            return;
        }
        for (int i = 0; i < value.size(); i++) {
            if (i == value.size() - 1) {
                this.txtMeanings.append(value.get(i));
            } else {
                this.txtMeanings.append(value.get(i) + ", ");
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbxLanguageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxLanguageActionPerformed
        // TODO add your handling code here:
        if (cbxLanguage.getSelectedIndex() == 1) {
            this.language = "en";
            this.country = "US";
            loadData("VN_dictionary.txt", this.VN_Tree);
            setUpUI(language, country);
        } else {
            this.language = "vn";
            this.country = "VN";
            setUpUI(language, country);
            loadData("EN_dictionary.txt", this.EN_Tree);
        }
        this.txtMeanings.setText("");
    }//GEN-LAST:event_cbxLanguageActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String word = txtWord.getText();
        String meaning = txtMeaning.getText();
        LinkedList<String> value = new LinkedList();
        LinkedList<String> meanings = new LinkedList<>();
        meanings.add(word);
        StringTokenizer stk;
        if (word.isEmpty()) {
            txtWord.requestFocus();
            JOptionPane.showMessageDialog(this, resource.getString("msgError"), resource.getString("msgErrorTitle"), JOptionPane.OK_OPTION);
            return;
        }
        if (meaning.isEmpty()) {
            txtMeaning.requestFocus();
            JOptionPane.showMessageDialog(this, resource.getString("msgError"), resource.getString("msgErrorTitle"), JOptionPane.OK_OPTION);
            return;
        }
        if (EN_Tree.Search(word) != null) {
            txtWord.requestFocus();
            JOptionPane.showMessageDialog(this, resource.getString("msgError2"), resource.getString("msgErrorTitle"), JOptionPane.OK_OPTION);
            return;
        }
        if (VN_Tree.Search(word) != null) {
            txtWord.requestFocus();
            JOptionPane.showMessageDialog(this, resource.getString("msgError2"), resource.getString("msgErrorTitle"), JOptionPane.OK_OPTION);
            return;
        }
        if (meaning.contains(",")) {
            stk = new StringTokenizer(meaning, ",");
            while (stk.hasMoreElements()) {
                value.add(stk.nextToken().trim());
            }
        } else {
            value.add(meaning);
        }
//        System.out.println(value);
        if (cbxLanguage.getSelectedIndex() == 1) {
            EN_Tree.insert(word, value);
            for (String string : value) {
                VN_Tree.insert(string, meanings);
            }

        } else {
            EN_Tree.insert(word, value);
            for (String string : value) {
                VN_Tree.insert(string, meanings);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (cbxLanguage.getSelectedIndex() == 1) {
            File file1 = new File("EN_dictionary.txt");
            save(file1, EN_Tree);
            File file2 = new File("VN_dictionary.txt");
            save(file2, VN_Tree);
        }
        else {
            File file1 = new File("VN_dictionary.txt");
            save(file1, VN_Tree);
            File file2 = new File("EN_dictionary.txt");
            save(file2, EN_Tree);
        }
        JOptionPane.showMessageDialog(this, resource.getString("msgSave"), resource.getString("btnSave"), JOptionPane.YES_OPTION);
    }//GEN-LAST:event_btnSaveActionPerformed

    public void save(File fileName, BinaryTree tree) {
        try {
            FileWriter fw = new FileWriter(fileName, false);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            pw.close();
            bw.close();
            fw.close();
        } catch (Exception e) {
        }
        BinaryNode p = tree.root;
        Queue<BinaryNode> queue = new LinkedList();
        queue.offer(p); // enqueue
        while (queue.isEmpty() == false) {
            p = queue.poll(); // dequeue
            visit(p, fileName);// traverse
            if (p.left != null) {
                queue.offer(p.left);
            }
            if (p.right != null) {
                queue.offer(p.right);
            }
        }
    }

    public void visit(BinaryNode p, File file) {
        String key;
        String value = "";
        if (p != null) {
            key = p.key;
            for (int i = 0; i < p.value.size(); i++) {
                if (i == p.value.size() - 1) {
                    value += p.value.get(i).trim();
                } else {
                    value += p.value.get(i).trim() + ", ";
                }
            }
            try {
                FileWriter fw = new FileWriter(file, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                pw.print(key + " : " + value + "\n");
                pw.close();
                bw.close();
                fw.close();
            } catch (Exception e) {
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DictionaryGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbxLanguage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTextField txtMeaning;
    private javax.swing.JTextArea txtMeanings;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtWord;
    // End of variables declaration//GEN-END:variables
}
